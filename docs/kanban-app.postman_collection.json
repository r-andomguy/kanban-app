{
	"info": {
		"_postman_id": "f5795d6c-c953-41c8-9767-056d5d20e212",
		"name": "kanban-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34780718"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"User\",\r\n    \"email\": \"email@email.com.br\",\r\n    \"password\": \"Teste@123\",\r\n    \"password_confirmation\": \"Teste@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}register",
							"host": [
								"{{url}}register"
							]
						},
						"description": "## Register User Endpoint\n\nThis endpoint is used to register a new user in the system. By sending a POST request to the `/register` endpoint, users can create an account by providing their personal information.\n\n### Request Parameters\n\nThe request body must be in JSON format and include the following parameters:\n\n- **name** (string): The full name of the user. This is a required field.\n    \n- **email** (string): The email address of the user. This must be unique and is a required field.\n    \n- **password** (string): The password chosen by the user. This is a required field and should meet the application's security requirements.\n    \n- **password_confirmation** (string): A confirmation of the password entered. This should match the password field to ensure accuracy.\n    \n\n### Example Request Body\n\n``` json\n{\n  \"name\": \"User\",\n  \"email\": \"email@email.com.br\",\n  \"password\": \"Teste@123\",\n  \"password_confirmation\": \"Teste@123\"\n}\n\n ```\n\n### Response Structure\n\nUpon successful registration, the server will respond with a JSON object that typically includes:\n\n- **status** (string): Indicates whether the registration was successful or if there were errors.\n    \n- **message** (string): A descriptive message regarding the outcome of the registration attempt.\n    \n- **user** (object): Contains the details of the newly registered user, such as their ID and other relevant information.\n    \n\n### Example Response\n\n``` json\n{\n  \"status\": \"success\",\n  \"message\": \"User registered successfully.\",\n  \"user\": {\n    \"id\": 1,\n    \"name\": \"User\",\n    \"email\": \"email@email.com.br\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the email provided is valid and not already in use.\n    \n- Passwords should adhere to the security policies set by the application.\n    \n- If there are validation errors, the response will provide details on what needs to be corrected."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email@email.com.br\",\r\n    \"password\": \"Teste@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}login",
							"host": [
								"{{url}}login"
							]
						},
						"description": "## Login Endpoint\n\nThis endpoint is used to authenticate a user by verifying their credentials. Upon successful authentication, the user will receive a token that can be used for subsequent requests.\n\n### Request\n\n**Method:** POST  \n**URL:** `{{url}}login`\n\n**Request Body Format:**  \nThe request body should be in JSON format and must include the following fields:\n\n- **email** (string): The email address of the user attempting to log in.\n    \n- **password** (string): The password associated with the user's account.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"email\": \"user@example.com\",\n  \"password\": \"your_password\"\n}\n\n ```\n\n### Response\n\nOn successful login, the response will typically include:\n\n- **token** (string): A JWT or session token that will be used for authentication in subsequent requests.\n    \n- **user** (object): An object containing user details such as user ID, name, and any other relevant information.\n    \n\n**Example Response:**\n\n``` json\n{\n  \"token\": \"your_jwt_token\",\n  \"user\": {\n    \"id\": \"user_id\",\n    \"name\": \"User Name\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the email and password are correctly formatted to avoid authentication errors.\n    \n- The response structure may vary depending on the implementation but will generally include a token and user information."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}logout",
							"host": [
								"{{url}}logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Board",
			"item": [
				{
					"name": "Get All boards",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards",
							"host": [
								"{{url}}boards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get board",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Board",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Quadro ajustado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/2",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Board",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Board",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeiro Quadro\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards",
							"host": [
								"{{url}}boards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Get All categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/2",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Categoria atualizada 2\",\r\n    \"order\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeira categoria\",\r\n    \"order\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/2",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Categoria atualizada 2\",\r\n    \"order\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeira categoria\",\r\n    \"order\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Get All Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/1/tasks",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/1/tasks/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1",
								"tasks",
								"1"
							]
						},
						"description": "### Get Task Details\n\nThis endpoint retrieves the details of a specific task associated with a category in a board.\n\n#### Request Parameters\n\n- **Board ID**: The unique identifier for the board (e.g., `1`).\n    \n- **Category ID**: The unique identifier for the category within the board (e.g., `1`).\n    \n- **Task ID**: The unique identifier for the task within the category (e.g., `1`).\n    \n\nThe full endpoint structure is as follows:\n\n```\nGET {{url}}/boards/{boardId}/categories/{categoryId}/tasks/{taskId}\n\n ```\n\n#### Expected Response\n\nThe response will contain the details of the requested task, including attributes such as:\n\n- Task title\n    \n- Task description\n    \n- Status\n    \n- Assigned users\n    \n- Due date\n    \n\n#### Notes\n\n- Ensure that the specified IDs exist in the system to avoid errors.\n    \n- This endpoint is useful for fetching detailed information about a specific task for display or further processing."
					},
					"response": []
				},
				{
					"name": "Update task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeira tarefa\",\r\n    \"description\": \"criar essa tarefa\",\r\n    \"status\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories/2/tasks/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"2",
								"tasks",
								"1"
							]
						},
						"description": "## Update Task\n\nThis endpoint allows you to update an existing task within a specific category of a board. The task is identified by its unique ID.\n\n### Request\n\n- **Method**: PUT\n    \n- **URL**: `{{url}}boards/{boardId}/categories/{categoryId}/tasks/{taskId}`\n    \n\n### Request Body\n\nThe request body must be in JSON format and should include the following parameters:\n\n- **title** (string): The title of the task that you want to update.\n    \n- **description** (string): A detailed description of the task.\n    \n- **status** (integer): The current status of the task, represented by an integer value.\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated task description\",\n  \"status\": 2\n}\n\n ```\n\n### Response\n\nUpon a successful update, the API will return a response containing the updated task details. The structure of the response will typically include:\n\n- **id** (integer): The unique identifier of the task.\n    \n- **title** (string): The updated title of the task.\n    \n- **description** (string): The updated description of the task.\n    \n- **status** (integer): The updated status of the task.\n    \n\n### Example Response\n\n``` json\n{\n  \"id\": 1,\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated task description\",\n  \"status\": 2\n}\n\n ```\n\nEnsure that you provide valid values for each parameter when making the request to successfully update the task."
					},
					"response": []
				},
				{
					"name": "Delete task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/2/tasks/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"2",
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeira tarefa\",\r\n    \"description\": \"criar essa tarefa\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories/1/tasks",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/1/tasks",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/1/tasks/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1",
								"tasks",
								"1"
							]
						},
						"description": "### Get Task Details\n\nThis endpoint retrieves the details of a specific task associated with a category in a board.\n\n#### Request Parameters\n\n- **Board ID**: The unique identifier for the board (e.g., `1`).\n    \n- **Category ID**: The unique identifier for the category within the board (e.g., `1`).\n    \n- **Task ID**: The unique identifier for the task within the category (e.g., `1`).\n    \n\nThe full endpoint structure is as follows:\n\n```\nGET {{url}}/boards/{boardId}/categories/{categoryId}/tasks/{taskId}\n\n ```\n\n#### Expected Response\n\nThe response will contain the details of the requested task, including attributes such as:\n\n- Task title\n    \n- Task description\n    \n- Status\n    \n- Assigned users\n    \n- Due date\n    \n\n#### Notes\n\n- Ensure that the specified IDs exist in the system to avoid errors.\n    \n- This endpoint is useful for fetching detailed information about a specific task for display or further processing."
					},
					"response": []
				},
				{
					"name": "Update task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeira tarefa\",\r\n    \"description\": \"criar essa tarefa\",\r\n    \"status\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories/2/tasks/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"2",
								"tasks",
								"1"
							]
						},
						"description": "## Update Task\n\nThis endpoint allows you to update an existing task within a specific category of a board. The task is identified by its unique ID.\n\n### Request\n\n- **Method**: PUT\n    \n- **URL**: `{{url}}boards/{boardId}/categories/{categoryId}/tasks/{taskId}`\n    \n\n### Request Body\n\nThe request body must be in JSON format and should include the following parameters:\n\n- **title** (string): The title of the task that you want to update.\n    \n- **description** (string): A detailed description of the task.\n    \n- **status** (integer): The current status of the task, represented by an integer value.\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated task description\",\n  \"status\": 2\n}\n\n ```\n\n### Response\n\nUpon a successful update, the API will return a response containing the updated task details. The structure of the response will typically include:\n\n- **id** (integer): The unique identifier of the task.\n    \n- **title** (string): The updated title of the task.\n    \n- **description** (string): The updated description of the task.\n    \n- **status** (integer): The updated status of the task.\n    \n\n### Example Response\n\n``` json\n{\n  \"id\": 1,\n  \"title\": \"Updated task title\",\n  \"description\": \"Updated task description\",\n  \"status\": 2\n}\n\n ```\n\nEnsure that you provide valid values for each parameter when making the request to successfully update the task."
					},
					"response": []
				},
				{
					"name": "Delete task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}boards/1/categories/2/tasks/1",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"2",
								"tasks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Primeira tarefa\",\r\n    \"description\": \"criar essa tarefa\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}boards/1/categories/1/tasks",
							"host": [
								"{{url}}boards"
							],
							"path": [
								"1",
								"categories",
								"1",
								"tasks"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://127.0.0.1:8000/api/",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}